class RandomizedCollection:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.set_con = set()
        self.list_con = []
        self.index_list = dict()
        self.cur_ind = 0
        
    def insert(self, val: int) -> bool:
        """
        Inserts a value to the collection. Returns true if the collection did not already contain the specified element.
        """
        res = True
        self.set_con.add(val)
        self.list_con.append(val)
        
        if val not in self.index_list:
            self.index_list[val] = {self.cur_ind}
        else:
            self.index_list[val].add(self.cur_ind)
            res = False
            
        self.cur_ind += 1
            
        return res

    def remove(self, val: int) -> bool:
        """
        Removes a value from the collection. Returns true if the collection contained the specified element.
        """
        # remove set
        if val not in self.index_list:
            return False
        
        self.set_con.remove(val)
        
        # get index
        ind_temp = self.index_list[val].pop()

        # Swap
        self.list_con[ind_temp] = self.list_con[-1]
        self.list_con.pop()
        
        # update index
        self.index_list[self.list_con[ind_temp]].remove(ind_temp) ## error
        self.index_list.add(ind_temp)
        
        self.cur_ind -= 1
        
        return True
        

    def getRandom(self) -> int:
        """
        Get a random element from the collection.
        """
        
        ind = (self.cur_ind + 1)*math.floor(random.uniform(0, 1))
        return self.list_con[ind]


# Your RandomizedCollection object will be instantiated and called as such:
# obj = RandomizedCollection()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
